Teikei.module("Views", function(Views, App, Backbone, Marionette, $, _) {

  Views.Map = Marionette.ItemView.extend({

    APIKEY: "<%= ENV['CLOUDMADE_KEY'] %>",
    markers: [],
    map: null,

    tagName: "div",
    template: "Map",
    templateHelpers: {
      something: "Adding some stuff to the stage:"
    },

    initialize: function() {
      App.vent.on('model:select', function (model) {
        this.initPopup(model);
      }, this);
    },

    onRender: function() {
      _.defer(_.bind(this.initMap, this));
    },

    initMap: function() {
      var markers = this.markers;
      var map = this.map;

      map = L.map("map").setView([52.52, 13.39], 10);
      L.tileLayer("http://{s}.tile.cloudmade.com/" + this.APIKEY + "/997/256/{z}/{x}/{y}.png", {
        attribution: "Map data &copy; <a href='http://openstreetmap.org'>OpenStreetMap</a> contributors, <a href='http://creativecommons.org/licenses/by-sa/2.0/'>CC-BY-SA</a>, Imagery Â© <a href='http://cloudmade.com'>CloudMade</a>",
        maxZoom: 18
      }).addTo(map);

      this.collection.each(function(model){
        var location = model.get("location");
        var marker = L.marker(location);

        marker.on('click', function () {
          App.vent.trigger("model:select", model);
        });
        model.marker = marker;
        marker.addTo(map);
        markers.push(marker);
      })
    },

    initPopup: function(model) {
      var marker = model.marker;
      var view = new Views.MapPopup({model: model});
      marker.bindPopup(view.render().el).openPopup();
    }

  });
});
