Teikei.module("Places", function(Places, App, Backbone, Marionette, $, _) {

  Places.MapView = Marionette.ItemView.extend({

    APIKEY: "<%= ENV['MAP_API_KEY'] %>",
    markers: [],
    template: "places/map",

    templateHelpers: {
      something: "Adding some stuff to the stage:"
    },

    initialize: function(options) {
      this.collection = options.collection;
      this.collection.bind("reset", this.initMap, this);
      App.vent.on('places:map:select', this.initPopup, this);
    },

    initMap: function() {
      var markers = this.markers;
      var map = L.map("map").setView([52.52, 13.39], 10);

      this.initTiles(map);

      this.collection.each(function(model){
        var lat = model.get("latitude");
        var lng = model.get("longitude");

        if (lat && lng) {
          var location = new L.LatLng(lat, lng);
          var marker = L.marker(location);

          marker.on('click', function () {
            App.vent.trigger("places:map:select", model);
          });
          model.marker = marker;
          markers.push(marker);
          marker.addTo(map);
        }
      })
    },

    initTiles: function(map) {
      L.tileLayer("http://{s}.tiles.mapbox.com/v3/" + this.APIKEY + "/{z}/{x}/{y}.png", {
        attribution: "Map data &copy; <a href='http://openstreetmap.org'>OpenStreetMap</a> contributors, <a href='http://creativecommons.org/licenses/by-sa/2.0/'>CC-BY-SA</a></a>",
      }).addTo(map);
    },

    initPopup: function(model) {
      var marker = model.marker;
      var view = new Places.MapItemView({model: model});
      marker.bindPopup(view.render().el).openPopup();
    }

  });
});
